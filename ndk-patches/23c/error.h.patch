--- ./usr/include/error.h.orig	2023-10-20 17:39:29.047229959 +0700
+++ ./usr/include/error.h	2023-10-20 17:40:45.986235532 +0700
@@ -42,37 +42,32 @@
  * a function pointer that, if non-null, is called by error() instead of prefixing errors with the
  * program name.
  *
- * Available since API level 23.
  */
 
-#if __ANDROID_API__ >= 23
-extern void (*error_print_progname)(void) __INTRODUCED_IN(23);
+extern void (*error_print_progname)(void);
 
 /**
  * [error_message_count(3)](http://man7.org/linux/man-pages/man3/error_message_count.3.html) is
  * a global count of the number of calls to error() and error_at_line().
  *
- * Available since API level 23.
  */
-extern unsigned int error_message_count __INTRODUCED_IN(23);
+extern unsigned int error_message_count;
 
 /**
  * [error_one_per_line(3)](http://man7.org/linux/man-pages/man3/error_one_per_line.3.html) is
  * a global flag that if non-zero disables printing multiple errors with the same filename and
  * line number.
  *
- * Available since API level 23.
  */
-extern int error_one_per_line __INTRODUCED_IN(23);
+extern int error_one_per_line;
 
 /**
  * [error(3)](http://man7.org/linux/man-pages/man3/error.3.html) formats the given printf()-like
  * error message, preceded by the program name. Calls exit if `__status` is non-zero, and appends
  * the result of strerror() if `__errno` is non-zero.
  *
- * Available since API level 23.
  */
-void error(int __status, int __errno, const char* __fmt, ...) __printflike(3, 4) __INTRODUCED_IN(23);
+void error(int __status, int __errno, const char* __fmt, ...) __printflike(3, 4);
 
 /**
  * [error_at_line(3)](http://man7.org/linux/man-pages/man3/error_at_line.3.html) formats the given
@@ -80,10 +75,8 @@
  * Calls exit if `__status` is non-zero, and appends the result of strerror() if `__errno` is
  * non-zero.
  *
- * Available since API level 23.
  */
-void error_at_line(int __status, int __errno, const char* __filename, unsigned int __line_number, const char* __fmt, ...) __printflike(5, 6) __INTRODUCED_IN(23);
-#endif /* __ANDROID_API__ >= 23 */
+void error_at_line(int __status, int __errno, const char* __filename, unsigned int __line_number, const char* __fmt, ...) __printflike(5, 6);
 
 
 __END_DECLS
